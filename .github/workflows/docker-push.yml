on:
  schedule:
    - cron: "0 0 * * 0"
  push:

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Fetch version
        id: version
        run: |
          # Check latest github release check-version:
          repo="v2fly/v2ray-core"
          version=$(curl -sSL --retry 5 "https://api.github.com/repos/${repo}/releases/latest" | jq -r .tag_name)
          my_version="null"
          if [ -f "version" ]; then
            my_version=$(cat version | grep -E '^VERSION=' | cut -d '=' -f 2)
          fi
          commit_message="$(git log -1 --pretty=%B)"
          if [ "$version" != "$my_version" ]; then
            echo "Upstream version is $version, but my version is $my_version"
          else
            echo "Upstream version is $version"
            if [[ $commit_message != *"[force]"* ]]; then
              version="null"
            fi
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
          echo $version

  check-env:
    permissions:
      contents: none
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    outputs:
      check-docker: ${{ steps.check-docker.outputs.defined }}
    steps:
      - id: check-docker
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        if: ${{ env.DOCKER_USERNAME != '' }}
        run: echo "defined=true" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs:
      - check-env
      - check-version
    if: needs.check-env.outputs.check-docker == 'true' && needs.check-version.outputs.version != 'null'
    timeout-minutes: 120
    permissions:
      packages: write
      contents: write
      id-token: write
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Get tag to build
        id: tag
        run: |
          repo=v2fly/v2ray-core
          tag=${{ needs.check-version.outputs.version }}
          # tag=$(curl -sSL --retry 5 "https://api.github.com/repos/${repo}/releases/latest" | jq .tag_name | awk -F '"' '{print $2}')
          read type tag_sha < <(echo $(curl -sSL --retry 5 "https://api.github.com/repos/$repo/git/ref/tags/$tag" |  jq -r '.object.type,.object.sha'))
          echo "tag=${tag}" >> $GITHUB_OUTPUT
          echo "sha=${tag_sha}" >> $GITHUB_OUTPUT
          echo "short_sha=$(echo $tag_sha | cut -c1-7)" >> $GITHUB_OUTPUT
          echo "pkg=v2fly-core" >> $GITHUB_OUTPUT

      - name: Update version file
        run: |
          echo "VERSION=${{ steps.tag.outputs.tag }}" > version
          echo "SHA=${{ steps.tag.outputs.sha }}" >> version
          echo "SHORT_SHA=${{ steps.tag.outputs.short_sha }}" >> version
          git config --local user.name "github-actions[bot]"
          git config --local user.email "${{ github.actor_id }}+github-actions[bot]@users.noreply.github.com"
          git add version
          git commit -m "Update version to ${{ steps.tag.outputs.tag }} [skip ci]" || echo "No changes to commit"

      - name: Push changes
        uses: ad-m/github-push-action@v0.8.0
        with:
          branch: ${{ github.head_ref }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true
          force: true

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/${{ steps.tag.outputs.pkg }}
            ghcr.io/${{ github.actor }}/${{ steps.tag.outputs.pkg }}
          tags: |
            type=raw,value=latest,enable=true
            type=raw,value=${{ steps.tag.outputs.tag }},enable=true
            type=raw,value=${{ steps.tag.outputs.sha }},enable=true
            type=raw,value=${{ steps.tag.outputs.short_sha }},enable=true
          flavor: latest=false

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          cache-from: type=gha,scope=docker-release
          cache-to: type=gha,mode=max,scope=docker-release
          build-args: |
            TAG=${{ steps.tag.outputs.tag }}
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')

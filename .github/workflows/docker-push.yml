on:
  schedule:
        - cron: "0 4 1 * *"
  workflow_dispatch:
    inputs:
      tag:
        description: "The tag version you want to build"
  push:
    paths:
      - "v2ray.sh"
      - "Dockerfile"
      - ".github/workflows/docker-push.yml"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "v2ray.sh"
      - "Dockerfile"
      - ".github/workflows/docker-push.yml"

jobs:
  check-env:
    permissions:
      contents: none
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    outputs:
      check-docker: ${{ steps.check-docker.outputs.defined }}
    steps:
      - id: check-docker
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        if: ${{ env.DOCKER_USERNAME != '' }}
        run: echo "defined=true" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: check-env
    if: needs.check-env.outputs.check-docker == 'true'
    timeout-minutes: 120
    permissions:
      packages: write
      contents: read
      id-token: write
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Get tag to build
        id: tag
        run: |
          repo=v2fly/v2ray-core
          tag=$(curl -sSL --retry 5 "https://api.github.com/repos/${repo}/releases/latest" | jq .tag_name | awk -F '"' '{print $2}')
          if [[ -z "${{ github.event.inputs.tag }}" ]]; then
            echo "Use the latest release tag of v2ray-core: ${tag}"
          else
            echo "Use tag: ${{ github.event.inputs.tag }}"
            tag="${{ github.event.inputs.tag }}"
          fi
          read type tag_sha < <(echo $(curl -sSL --retry 5 "https://api.github.com/repos/$repo/git/ref/tags/$tag" |  jq -r '.object.type,.object.sha'))
          echo "tag=${tag}" >> $GITHUB_OUTPUT
          echo "sha=${tag_sha}" >> $GITHUB_OUTPUT
          echo "short_sha=$(echo $tag_sha | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/v2fly-core
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable=true
            type=raw,value=${{ steps.tag.outputs.tag }},enable=true
            type=raw,value=${{ steps.tag.outputs.sha }},enable=true
            type=raw,value=${{ steps.tag.outputs.short_sha }},enable=true
          flavor: latest=false

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          cache-from: type=gha,scope=docker-release
          cache-to: type=gha,mode=max,scope=docker-release
          build-args: |
            TAG=${{ steps.tag.outputs.tag }}
